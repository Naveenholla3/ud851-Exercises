{"practiceType":"Secure Development","selectedClient":"Standard","associated":[],"metadata":{"clientName":"Standard","clientAddress":"","appName":"","appDescription":"","testType":"Penetration Test - Essential","startDate":"","endDate":"","scope":"","scopeType":"","outOfScope":"","outOfScopeType":"","controlList":"","consultantName":"","consultantTitle":"","consultantNumber":"","consultantEmail":"","oversightName":"","oversightTitle":"Security Consultant","oversightNumber":"703-404-9293 x","oversightEmail":"@synopsys.com","clientManagerName":"","clientManagerTitle":"","clientManagerNumber":"703-404-9293 x","clientManagerEmail":"@synopsys.com","confidentiality":"","integrity":"","availability":"","hash":"671a150524115bebb83a413aff86231f28604a2ea04c930ae3cf27e531b78be4","versionNumber":"2019.03","isTWBAssessment":"false","testID":"","totalInstances":0,"pciReport":false,"retest":false},"findings":[{"identifier":53451,"name":"Mail Injection","description":"The application constructs an email containing untrusted user-supplied data in such a way that it is interpreted as HTML code and rendered in the recipient's mail client. The malicious data is passed to the application as a parameter and the application inserts it directly into the body of the email. When no input validation is performed, any HTML tags included in user input will be interpreted as part of the email body.<br>Mail Injection allows an attacker to inject malicious content into application-generated emails. Injected content can be used to compromise the recipient's identity or trick them into performing unintended operations since the attacker can abuse a user's trust in the email. For example, malicious links placed in the email's body may direct the user to fraudulent phishing sites. Injected links can also be used to exploit other vulnerabilities in legitimate sites (e.g. cross-site scripting, cross-site request forgery, etc.). Additionally, if the application allows the attacker to control more parameters than just the body, it is possible to spoof the source email address, compromising the integrity of the email.","note":"","instances":[],"systemic":"false","fixLocation":null,"screenshots":[],"stepsToReproduce":"","likelihoodDescription":"","impactDescription":"","contextDescription":"The application allows untrusted user data to be put into email body which will allow attacker to inject malicious content into application-generated emails which can lead to attacks such as Phishing Attacks, Cross-Site Scripting, Cross-Site Request Forgery, etc.<br>\n","remediation":"The application should perform input validation and output encoding on user input that propagates to an application-generated e-mail. Validation should also be performed on all email-specific fields, such as the \"To\", \"From\", and \"Message\" fields of the e-mail API that the application presents to the user.<br>\nFurthermore, HTML that is identified in the message body can be handled in one of two ways depending on the application's required functionality. HTML can be completely blocked from the body by triggering an error message when HTML is encountered, or the HTML can be encoded and remain as part of the message. Note that any encoding or removal of HTML characters must be performed on plaintext e-mails as well, since email clients may still render HTML found in plaintext emails.","foundBy":"Manual","risk":{"type":"NIST","impact":"Medium","likelihood":"High","severity":"Medium"},"bnySeverityRiskLevels":["--select severity--","Critical","High","Medium","Low","Informational"],"cvdId":"75","appscanTitle":"","itrc":"","cweId":"88","cweIdFlawName":"","cweIdCategory":"","pciId":"6.5.1 ","pciDesc":" Injection Flaws","flawCount":0}],"customFields":[{"name":"assessmentNotes","label":"Assessment Notes","fieldType":"textarea","value":""}],"riskType":"NIST5","billable":"true","sdr":"false","priorTestingFlag":"false","generatedBy":"tort","totalUploadedFileSize":0}